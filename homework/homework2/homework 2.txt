1)git archive
Команда git archive используется для упаковки в архив указанных коммитов или всего репозитория.  
2)git stash
Команда git stash используется для временного сохранения всех незафиксированных изменений с целью очистки рабочего каталога без необходимости фиксировать незавершённую работу в текущей ветке.
3)git branch
  Команда git branch — это своего рода “менеджер веток”. Она умеет перечислять  ветки, создавать новые, удалять и переименовывать их.
4)git status
Команда git status показывает состояния файлов в рабочей директории и индексе: какие файлы   изменены, но не добавлены в индекс; какие ожидают коммита в индексе. Вдобавок к этому  выводятся подсказки о том, как изменить состояние файлов.
5)git add
Команда git add добавляет содержимое рабочей директории в индекс для последующего коммита.  
6)git remote
Команда git remote служит для управления списком удалённых репозиториев. Она позволяет сохранять длинные URL репозиториев в виде понятных коротких строк, например "origin . Мы можем использовать несколько удалённых репозиториев для работы и git remote поможет добавлять, изменять и удалять их.
7)git commit 
Команда git commit берёт все данные, добавленные в индекс с помощью git add, и сохраняет их слепок во внутренней базе данных, а затем сдвигает указатель текущей ветки на этот слепок.
8)git push
Команда git push используется для установления связи с удалённым репозиторием, вычисления локальных изменений отсутствующих в нём, и собственно их передачи в вышеупомянутый репозиторий.
9)git fetch
Команда git fetch связывается с удалённым репозиторием и забирает из него все изменения, которых  пока нет и сохраняет их локально.
10)git pull
Команда git pull  вначале забирает изменения из указанного удалённого репозитория, а затем пытается слить их с текущей веткой.
